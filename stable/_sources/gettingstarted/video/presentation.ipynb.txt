{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "11115fc6",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "efad21a4",
   "metadata": {},
   "source": [
    "In this presentation, we will shortly present some of the **SpectroChemPy** features."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d85e0279",
   "metadata": {
    "slideshow": {
     "slide_type": "notes"
    }
   },
   "source": [
    "## Using the Jupyter Lab environment"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e04ee8d",
   "metadata": {},
   "source": [
    "PRobably the most easiet way to start experiencing SpectroChemPy\n",
    "\n",
    "<img src='images/enter_md.png' />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "844b6ef1",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "We first need to load the API"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58343dac",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    },
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "import spectrochempy as scp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "def8554a",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## NDDataset, the main object"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a9ac416",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "NDDataset is a python object, actually a container, which can represent most of your multidimensional spectroscopic\n",
    "data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d3bb5c3f",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "For instance, in the following we read data from a series of FTIR experiments,\n",
    "provided  by the OMNIC software, and create a **NDDataset** from these data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e305c572",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = scp.read(\"irdata/nh4y-activation.spg\")\n",
    "print(ds)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "825219e2",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Display dataset information"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2406f23d",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "002b2a69",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Plotting a dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e5a36fd4",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "_ = ds.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06c4279c",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Modifying the figure"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d505761",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Slicing a dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6d5b1de",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "region = ds[:, 4000.0:2000.0]\n",
    "_ = region.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f108d6c0",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "### Maths on datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c41a9ed8",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "region.y -= region.y[0]  # make y coordinate reative to the first point\n",
    "region.y.title = \"time of dehydratatioin\"\n",
    "region -= region[-1]  # suppress the last spectra to all\n",
    "_ = region.plot(colorbar=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4103842",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## Processing a dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c153fb5f",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "We just give here few examples"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "856b668a",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Smoothing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a0b398c6",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "smoothed = region.smooth(window_length=51, window=\"hanning\")\n",
    "_ = smoothed.plot(colormap=\"magma\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c46e9a0",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "#### Baseline correction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ee7a5f8",
   "metadata": {
    "slideshow": {
     "slide_type": "fragment"
    }
   },
   "outputs": [],
   "source": [
    "region = ds[:, 4000.0:2000.0]\n",
    "smoothed = region.smooth(window_length=51, window=\"hanning\")\n",
    "blc = scp.BaselineCorrection(smoothed)\n",
    "basc = blc.compute(\n",
    "    [2000.0, 2300.0],\n",
    "    [3800.0, 3900.0],\n",
    "    method=\"multivariate\",\n",
    "    interpolation=\"pchip\",\n",
    "    npc=5,\n",
    ")\n",
    "_ = basc.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b74e6b0",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "source": [
    "## IRIS processing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bb6e98c8",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [],
   "source": [
    "ds = scp.read(\"irdata/CO@Mo_Al2O3.SPG\")[:, 2250.0:1950.0]\n",
    "pressure = [\n",
    "    0.00300,\n",
    "    0.00400,\n",
    "    0.00900,\n",
    "    0.01400,\n",
    "    0.02100,\n",
    "    0.02600,\n",
    "    0.03600,\n",
    "    0.05100,\n",
    "    0.09300,\n",
    "    0.15000,\n",
    "    0.20300,\n",
    "    0.30000,\n",
    "    0.40400,\n",
    "    0.50300,\n",
    "    0.60200,\n",
    "    0.70200,\n",
    "    0.80100,\n",
    "    0.90500,\n",
    "    1.00400,\n",
    "]\n",
    "ds.y = scp.Coord(pressure, title=\"Pressure\", units=\"torr\")\n",
    "_ = ds.plot(colormap=\"magma\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ab9a3d93",
   "metadata": {
    "slideshow": {
     "slide_type": "subslide"
    }
   },
   "outputs": [],
   "source": [
    "param = {\"epsRange\": [-8, -1, 50], \"lambdaRange\": [-10, 1, 12], \"kernel\": \"langmuir\"}\n",
    "\n",
    "iris = scp.IRIS(ds, param, verbose=False)\n",
    "_ = iris.plotdistribution(-7, colormap=\"magma\")"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,py:percent",
   "notebook_metadata_filter": "all"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

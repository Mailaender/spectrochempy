{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ea3634e6",
   "metadata": {},
   "source": [
    "# Peak integration\n",
    "\n",
    "This tutorial shows how to find peak maxima and determine peak areas with spectrochempy. As prerequisite,\n",
    "the user is expected to have read the [Import](../IO/import.ipynb), [Import IR](../IO/importIR.ipynb),\n",
    "[slicing](../processing/slicing.ipynb) and [baseline correction](../processing/baseline_correct.ipynb) tutorials."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d37e621f",
   "metadata": {},
   "source": [
    "First lets import the SpectroChemPy API"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "793701b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import spectrochempy as scp"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d18de76",
   "metadata": {},
   "source": [
    "Now import some 2D data into a NDDataset object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "86f5edb3",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = scp.read_omnic(\"irdata/nh4y-activation.spg\")\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4aa5e1bb",
   "metadata": {},
   "source": [
    "It's a series of 55 spectra.\n",
    "\n",
    "For the demonstration select only the first 20 on a limited region from 1250 to 1800 cm$^{-1}$ (Do not forget to\n",
    "use floating numbers for slicing)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "caa7875d",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = ds[:20, 1250.0:1800.0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26c69893",
   "metadata": {},
   "source": [
    "We can also eventually remove offset on the acquisition time dimension (y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cd4d1e9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "X.y -= X.y[0]\n",
    "X.y.ito(\"min\")\n",
    "X.y.title = \"acquisition time\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0af1db19",
   "metadata": {},
   "source": [
    "We set some plotting preferences and then plot the raw data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af95f551",
   "metadata": {},
   "outputs": [],
   "source": [
    "prefs = X.preferences\n",
    "prefs.figure.figsize = (6, 3)\n",
    "prefs.colormap = \"Dark2\"\n",
    "prefs.colorbar = True\n",
    "X.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a761cbd6",
   "metadata": {},
   "source": [
    "Now we can perform some baseline correction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c1e2d3dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "blc = scp.BaselineCorrection(X)\n",
    "regions = (\n",
    "    [1740.0, 1800.0],\n",
    "    [1550.0, 1570.0],\n",
    "    [1250.0, 1300.0],\n",
    ")  # define 3 regions where we want the baseline to reach zero.\n",
    "Xcorr = blc.compute(*regions)  # compute the corrected NDDataset\n",
    "\n",
    "Xcorr.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2517e26a",
   "metadata": {},
   "source": [
    "To integrate each row on the full range, we can use the sum or trapz method of a NDDataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58533dea",
   "metadata": {},
   "outputs": [],
   "source": [
    "inttrapz = Xcorr.trapz(dim=\"x\")\n",
    "intsimps = Xcorr.simps(dim=\"x\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5241148e",
   "metadata": {},
   "source": [
    "As you can see both method give almost the same results in this case"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d20fb194",
   "metadata": {},
   "outputs": [],
   "source": [
    "scp.plot_multiple(\n",
    "    method=\"scatter\",\n",
    "    ms=5,\n",
    "    datasets=[inttrapz, intsimps],\n",
    "    labels=[\"trapzoidal rule\", \"simpson' rule\"],\n",
    "    legend=\"best\",\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f51400d6",
   "metadata": {},
   "source": [
    "The difference between the trapezoidal and simpson integration methods is visualized below. In this case they are\n",
    "extremly close."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02fa8a53",
   "metadata": {},
   "outputs": [],
   "source": [
    "diff = (inttrapz - intsimps) * 100.0 / intsimps\n",
    "diff.title = \"difference\"\n",
    "diff.units = \"percent\"\n",
    "diff.plot(scatter=True, ms=5)"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,py:percent",
   "notebook_metadata_filter": "all"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
